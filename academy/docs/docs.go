// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Renders the home page with today's problems if available",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Show the home page",
                "responses": {
                    "200": {
                        "description": "Home page"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Displays admin dashboard with platform statistics",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Admin dashboard",
                "responses": {
                    "200": {
                        "description": "Admin dashboard"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                }
            }
        },
        "/admin/problems": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Lists all problems for admin management",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List all problems (admin)",
                "responses": {
                    "200": {
                        "description": "Admin problem list page"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Not admin"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Creates a new coding problem with the provided details",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create a new problem",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Day number",
                        "name": "day",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Problem type (dsa, linux, build)",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Problem slug (unique identifier)",
                        "name": "slug",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Problem title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Path to problem content file",
                        "name": "file_path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum score for the problem",
                        "name": "score",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time when the problem becomes available (RFC3339 format)",
                        "name": "unlock_time",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Problem created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/problems/{id}": {
            "put": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Updates an existing coding problem with the provided details",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update an existing problem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Problem ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Day number",
                        "name": "day",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Problem type (dsa, linux, build)",
                        "name": "type",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Problem slug (unique identifier)",
                        "name": "slug",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Problem title",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Path to problem content file",
                        "name": "file_path",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum score for the problem",
                        "name": "score",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Time when the problem becomes available (RFC3339 format)",
                        "name": "unlock_time",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Problem updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Problem not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Displays a list of all registered users for admin management",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "Users list"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/days": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Displays a list of all available days with their problems",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "problems"
                ],
                "summary": "List available days",
                "responses": {
                    "200": {
                        "description": "Days list page"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/days/{day}": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Displays details of a specific day and its problems",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "problems"
                ],
                "summary": "Show day detail page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Day number",
                        "name": "day",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Day detail page"
                    },
                    "400": {
                        "description": "Invalid day parameter"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Day not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/leaderboard": {
            "get": {
                "description": "Displays a leaderboard with top users and their scores",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Show leaderboard page",
                "responses": {
                    "200": {
                        "description": "Leaderboard page"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "get": {
                "description": "Renders the login page for user authentication",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Show the login page",
                "responses": {
                    "200": {
                        "description": "Login page"
                    }
                }
            },
            "post": {
                "description": "Validates OTP, creates/updates user, and issues JWT token on successful login",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Process login form submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OTP code",
                        "name": "otp",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to days page"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/problems/{slug}": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Displays details of a specific problem including description and examples",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "problems"
                ],
                "summary": "Show problem detail page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Problem slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Problem detail page"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Problem not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Displays user profile with submission history and statistics",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Show user profile",
                "responses": {
                    "200": {
                        "description": "Profile page"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Update user profile information like username",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/submit/{slug}": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Renders the submission form for a specific problem",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Display submission form",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Problem slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission form page"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Processes a final submission, runs all tests and saves result",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Process final submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Problem slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submitted code",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Programming language used",
                        "name": "language",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/terminal/{id}": {
            "get": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Renders the terminal interface for an active terminal session",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "terminal"
                ],
                "summary": "Display terminal interface",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Terminal session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Terminal page"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/terminal/{slug}": {
            "post": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Creates a new WBFY terminal session for a problem",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "terminal"
                ],
                "summary": "Create a new terminal session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Problem slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Programming language (default: bash)",
                        "name": "language",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Terminal session created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable - no ports available",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/test/{slug}": {
            "post": {
                "security": [
                    {
                        "JWTCookie": []
                    }
                ],
                "description": "Tests the submitted code against non-hidden test cases",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submission"
                ],
                "summary": "Test code submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Problem slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submitted code",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Programming language used",
                        "name": "language",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/verify": {
            "get": {
                "description": "Renders the OTP verification page with phone number and OTP if provided",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Show OTP verification page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "OTP code",
                        "name": "otp",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification page"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "description": "Bearer JWT token for authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "JWTCookie": {
            "description": "JWT token stored in cookie for authentication",
            "type": "apiKey",
            "name": "academy_session",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Summer Academy API",
	Description:      "API Server for Summer Academy educational platform",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
